import { useCallback, useEffect, useState } from "react";
import { PublicKey } from "o1js";
import { SwitchChainArgs } from "@aurowallet/mina-provider";
import { MinaProviderClient } from "@mina-js/providers";
import bs58 from "bs58";

function convertSignature(signature: string): {
  field: string;
  scalar: string;
} {
  // Decode the base58-encoded signature into bytes
  const bytes = bs58.decode(signature);

  // Ensure the byte array can be split into two equal parts
  if (bytes.length % 2 !== 0) {
    throw new Error("Invalid signature length.");
  }

  const half = bytes.length / 2;
  const fieldBytes = bytes.slice(0, half);
  const scalarBytes = bytes.slice(half);

  // Convert bytes to hexadecimal strings
  const fieldHex = Buffer.from(fieldBytes).toString("hex");
  const scalarHex = Buffer.from(scalarBytes).toString("hex");

  // Convert hexadecimal strings to decimal strings
  const field = BigInt("0x" + fieldHex).toString(10);
  const scalar = BigInt("0x" + scalarHex).toString(10);

  // Return the signature object
  return { field, scalar };
}

export function useMinaInjectedProvider() {
  const [isConnected, setIsConnected] = useState(false);
  const [hasWallet, setHasWallet] = useState<boolean | null>(null);
  const [provider, setProvider] = useState<MinaProviderClient | null>(null);
  const [account, setAccount] = useState<PublicKey | null>(null);
  const [networkID, setNetworkID] = useState<string | null>(null);

  const setAccountFromWalletResponse = useCallback(
    (base58Accounts: string[]) => {
      if (base58Accounts[0]) {
        setAccount(PublicKey.fromBase58(base58Accounts[0]));
      }
    },
    []
  );

  useEffect(() => {
    async function getAccount() {
      if (!provider) {
        setHasWallet(false);
        return;
      }

      const disconnected = localStorage.getItem("mina_disconnected");
      if (disconnected === "true") {
        setHasWallet(true);
        return;
      }

      // provider
      //   .request({ method: "mina_chainInformation" })
      //   .then((chainInfo) => setNetworkID(chainInfo));
      provider
        .request({
          method: "mina_accounts",
        })
        .then(({ result }) => {
          setAccountFromWalletResponse(result);
          setIsConnected(Boolean(result[0]));
        });
      setHasWallet(true);
    }

    // provider?.on("chainChanged", setNetworkID);
    // provider?.on("accountsChanged", setAccountFromWalletResponse);
    getAccount();

    return () => {
      // provider?.off("chainChanged", setNetworkID);
      // provider?.off("accountsChanged", setAccountFromWalletResponse);
    };
  }, [provider, setAccountFromWalletResponse]);

  useEffect(() => {
    //TODO: listen to all providers
    window.addEventListener("mina:announceProvider", (event) => {
      setProvider(event.detail.provider);
    });
    window.dispatchEvent(new Event("mina:requestProvider"));
  }, []);

  const connect = useCallback(async () => {
    if (!provider) {
      throw Error("Wallet is not installed");
    }

    localStorage.removeItem("mina_disconnected");

    // @ts-ignore
    const requestAccountsResponse = await provider.request({
      method: "mina_requestAccounts",
    });
    if (Array.isArray(requestAccountsResponse.result)) {
      setAccountFromWalletResponse(requestAccountsResponse.result);
      // provider.requestNetwork().then((chainInfo) => setNetworkID(chainInfo));
      setIsConnected(true);
    } else {
      throw Error(requestAccountsResponse.result);
    }
  }, [provider, setAccountFromWalletResponse]);

  const switchNetwork = useCallback(
    async (args: SwitchChainArgs) => {
      if (!provider) {
        throw Error("Wallet is not installed");
      }
      // const response = await provider.switchChain(args);
      // if ("networkID" in response) {
      //   setNetworkID(response);
      // } else {
      //   throw Error(response.message);
      // }
    },
    [provider]
  );

  const sendTransaction = useCallback(async () => {
    if (!provider) {
      throw Error("Wallet is not installed");
    }
    if (!isConnected) {
      throw Error("Wallet is not connected");
    }
    const anotherCommand = {
      zkappCommand: {
        feePayer: {
          body: {
            publicKey:
              "B62qiTKpEPjGTSHZrtM8uXiKgn8So916pLmNJKDhKeyBQL9TDb3nvBG",
            fee: "0",
            validUntil: null,
            nonce: "0",
          },
          authorization:
            "7mWxjLYgbJUkZNcGouvhVj5tJ8yu9hoexb9ntvPK8t5LHqzmrL6QJjjKtf5SgmxB4QWkDw7qoMMbbNGtHVpsbJHPyTy2EzRQ",
        },
        accountUpdates: [
          {
            body: {
              publicKey:
                "B62qjDnppFhY5tsEmLbCDRniCoJcYqLmHpEeXVfwM4Ej18uJFhTrmBb",
              tokenId: "wSHV2S4qX9jFsLjQo8r1BsMLH2ZRKsZx6EJd1sbozGPieEC4Jf",
              update: {
                appState: [null, "48", null, null, null, null, null, null],
                delegate: null,
                verificationKey: null,
                permissions: null,
                zkappUri: null,
                tokenSymbol: null,
                timing: null,
                votingFor: null,
              },
              balanceChange: {
                magnitude: "0",
                sgn: "Positive",
              },
              incrementNonce: false,
              events: [],
              actions: [],
              callData:
                "4484015619356682256229661713404070589280508410135164472357752589583005856673",
              callDepth: 0,
              preconditions: {
                network: {
                  snarkedLedgerHash: null,
                  blockchainLength: null,
                  minWindowDensity: null,
                  totalCurrency: null,
                  globalSlotSinceGenesis: null,
                  stakingEpochData: {
                    ledger: {
                      hash: null,
                      totalCurrency: null,
                    },
                    seed: null,
                    startCheckpoint: null,
                    lockCheckpoint: null,
                    epochLength: null,
                  },
                  nextEpochData: {
                    ledger: {
                      hash: null,
                      totalCurrency: null,
                    },
                    seed: null,
                    startCheckpoint: null,
                    lockCheckpoint: null,
                    epochLength: null,
                  },
                },
                account: {
                  balance: null,
                  nonce: null,
                  receiptChainHash: null,
                  delegate: null,
                  state: [
                    "16116219678327627588418069644712109297153469885195699368844152027463492597061",
                    "47",
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                  ],
                  actionState: null,
                  provedState: null,
                  isNew: null,
                },
                validWhile: null,
              },
              useFullCommitment: false,
              implicitAccountCreationFee: false,
              mayUseToken: {
                parentsOwnToken: false,
                inheritFromParent: false,
              },
              authorizationKind: {
                isSigned: false,
                isProved: true,
                verificationKeyHash:
                  "11750353713893815297158950840448218779998732873007487372019852701410593771174",
              },
            },
            authorization: {
              proof:
                "",
              signature: null,
            },
          },
        ],
        memo: "E4YM2vTHhWEg66xpj52JErHUBU4pZ1yageL4TVDDpTTSsv8mK6YaH",
      },
      feePayer: {
        publicKey: "B62qoYJCCwNSGRw73ww5eNCZnKCvjoEtrqr9UxuLnVHamDBEwSXjaw3",
        fee: "100000000",
        nonce: "0",
        memo: "",
      },
    };
    const command = {
      zkappCommand: {
        accountUpdates: [
          {
            body: {
              publicKey:
                "B62qjDnppFhY5tsEmLbCDRniCoJcYqLmHpEeXVfwM4Ej18uJFhTrmBb",
              tokenId: "wSHV2S4qX9jFsLjQo8r1BsMLH2ZRKsZx6EJd1sbozGPieEC4Jf",
              update: {
                appState: [null, "48", null, null, null, null, null, null],
                delegate: null,
                verificationKey: null,
                permissions: null,
                zkappUri: null,
                tokenSymbol: null,
                timing: null,
                votingFor: null,
              },
              balanceChange: {
                magnitude: "0",
                sgn: "Positive",
              },
              incrementNonce: false,
              events: [],
              actions: [],
              callData:
                "4484015619356682256229661713404070589280508410135164472357752589583005856673",
              callDepth: 0,
              preconditions: {
                network: {
                  snarkedLedgerHash: null,
                  blockchainLength: null,
                  minWindowDensity: null,
                  totalCurrency: null,
                  globalSlotSinceGenesis: null,
                  stakingEpochData: {
                    ledger: {
                      hash: null,
                      totalCurrency: null,
                    },
                    seed: null,
                    startCheckpoint: null,
                    lockCheckpoint: null,
                    epochLength: null,
                  },
                  nextEpochData: {
                    ledger: {
                      hash: null,
                      totalCurrency: null,
                    },
                    seed: null,
                    startCheckpoint: null,
                    lockCheckpoint: null,
                    epochLength: null,
                  },
                },
                account: {
                  balance: null,
                  nonce: null,
                  receiptChainHash: null,
                  delegate: null,
                  state: [
                    "16116219678327627588418069644712109297153469885195699368844152027463492597061",
                    "47",
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                  ],
                  actionState: null,
                  provedState: null,
                  isNew: null,
                },
                validWhile: null,
              },
              useFullCommitment: false,
              implicitAccountCreationFee: false,
              mayUseToken: {
                parentsOwnToken: false,
                inheritFromParent: false,
              },
              authorizationKind: {
                isSigned: false,
                isProved: true,
                verificationKeyHash:
                  "11750353713893815297158950840448218779998732873007487372019852701410593771174",
              },
            },
            authorization: {
              proof:
                "",
              signature: null,
            },
          },
        ],
        memo: "E4YM2vTHhWEg66xpj52JErHUBU4pZ1yageL4TVDDpTTSsv8mK6YaH",
        feePayer: {
          body: {
            publicKey: account?.toBase58(),
            fee: "100000000",
            validUntil: "100000",
            nonce: "1",
          },
          authorization: "",
        },
      },
      feePayer: {
        feePayer: account?.toBase58(),
        fee: "100000000",
        nonce: "0",
        memo: "Hello from MinaJS!",
      },
    };

    const req = {
      method: "mina_signTransaction",
      params: [
        {
          command,
        },
      ],
    };
    console.log(req);
    const result = await provider.request(req as any);
    console.log({ result });
    const tx = provider.request({
      method: "mina_sendTransaction",
      params: [
        {
          // @ts-ignore
          ...result.result,
          // @ts-ignore
          signature: convertSignature(result.result.signature),
        },
      ],
    });
    console.log({ tx });
    // if ("hash" in result) {
    //   return result;
    // } else {
    //   throw Error(
    //     "message" in result ? result.message : "Unknown error happened"
    //   );
    // }
  }, [account, isConnected, provider]);

  const disconnect = useCallback(() => {
    setAccount(null);
    setNetworkID(null);
    setIsConnected(false);
    localStorage.setItem("mina_disconnected", "true");
  }, []);

  return {
    networkID,
    hasWallet,
    switchNetwork,
    isConnected,
    connect,
    disconnect,
    account,
    sendTransaction,
  };
}
